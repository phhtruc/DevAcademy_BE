name: Spring Boot CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Build and test the application
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dev-academy:${{ github.sha }}

  # Job 2: Deploy the application to production server
  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest image that was pushed to Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dev-academy:${{ github.sha }}
            
            # Create docker network if it doesn't exist
            docker network inspect app-network >/dev/null 2>&1 || docker network create app-network      
            
            # Stop and remove the existing container if it exists
            docker stop dev-academy-container || true
            docker rm dev-academy-container || true
            docker stop dev-academy-redis || true
            docker rm dev-academy-redis || true
            
            # Start Redis container
            docker run -d --name dev-academy-redis \
            --network app-network \
            -p 6379:6379 \
            -v redis-data:/data \
            --restart always \
            redis:alpine
            
            # Start Spring Boot container
            docker run -d --name dev-academy-container \
              --network app-network \
              -p 8002:8002 \
              -e SPRING_PROFILES_ACTIVE=product \
              -e SPRING_DATASOURCE_URL="${{ secrets.DB_URL }}" \
              -e SPRING_DATASOURCE_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e SPRING_DATASOURCE_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e SPRING_MAIL_USERNAME="${{ secrets.SPRING_MAIL_USERNAME }}" \
              -e SPRING_MAIL_PASSWORD="${{ secrets.SPRING_MAIL_PASSWORD }}" \
              -e STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
              -e STRIPE_PUBLIC_KEY="${{ secrets.STRIPE_PUBLIC_KEY }}" \
              -e VN_PAY_TERMINAL_ID="${{ secrets.VN_PAY_TERMINAL_ID }}" \
              -e VN_PAY_SECRET_KEY="${{ secrets.VN_PAY_SECRET_KEY }}" \
              -e VN_PAY_PAYMENT_URL="${{ secrets.VN_PAY_PAYMENT_URL }}" \
              -e VN_PAY_RETURN_URL="${{ secrets.VN_PAY_RETURN_URL }}" \
              -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
              -e JWT_REFRESH_KEY="${{ secrets.JWT_REFRESH_KEY }}" \
              -e SPRING_DATA_REDIS_HOST=dev-academy-redis \
              -e SPRING_DATA_REDIS_PORT=6379 \
              -e TOKEN_GITHUB=${{ secrets.TOKEN_GITHUB }} \
              -e CHATGPT_API_KEY=${{ secrets.CHATGPT_API_KEY }} \
              -e CLIENT_ID=${{ secrets.CLIENT_ID }} \
              -e CLIENT_SECRET=${{ secrets.CLIENT_SECRET }} \
              -e REDIRECT_URI=${{ secrets.REDIRECT_URI }} \
              -e CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} \
              -e CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} \
              -e CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} \
              --restart always \
              ${{ secrets.DOCKERHUB_USERNAME }}/dev-academy:${{ github.sha }}
            
            echo "=== Docker container status ==="
            docker ps -a

            echo "=== Logs ==="
            docker logs dev-academy-container || echo "No logs found"
            
            echo "=== Application Logs ==="
            docker logs dev-academy-container || echo "No application logs found"
            
            echo "=== Redis Logs ==="
            docker logs dev-academy-redis || echo "No Redis logs found"
            
            # Simple health check
            sleep 15
            echo "=== Checking if application is responding ==="
            curl -s -o /dev/null -w "%{http_code}" localhost:8002/actuator/health || echo "Health check failed"
